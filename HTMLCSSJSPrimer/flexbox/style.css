h1 {
    text-align: center;
    font-family: 'Roboto', sans-serif;
}

.robots {
}

.head,
.left_arm,
.torso,
.right_arm,
.left_leg,
.right_leg {
    background-color: #5f93e8;
}

.head {
    width: 200px;
    margin: 0 auto;
    height: 150px;
    border-radius: 200px 200px 0 0;
    margin-bottom: 10px;
}

.eyes {
    display: flex;
}

.head:hover {
    width: 300px;
    transition: 1s ease-in-out;
}

.upper_body {
    height: 150px;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: center;
}

.left_arm, .right_arm {
    width: 40px;
    height: 125px;
    border-radius: 100px;
    display: flex;
}

.left_arm {
    margin-right: 10px;
}

.right_arm {
    margin-left: 10px;
}

.torso {
    width: 200px;
    height: 200px;
    border-radius: 0 0 50px 50px;
}

.lower_body {
    width: 200px;
    height: 200px;
    /* margin:0 auto centra automaticamente un elemento in base a tutta la pagina html
    anche se il div che lo contiene ha una dimensione che non è estesa a tutta la larghezza
    della pagina.
     Per allineare al centro l'elemento, in alternativa si poteva allargare la width del suo contenitore
     a tutta la pagina html e usare flex,flex-wrap:wrap e justify-content:center, come fatto nell'upper-body*/
    margin: 0 auto;
    display: flex;
    /*align-items: flex-end;*/

}

.left_leg, .right_leg {
    width: 40px;
    height: 120px;
    border-radius: 0 0 100px 100px;
}

.left_leg {
    margin-left: 45px;
    /*transition specifica in quanto tempo deve essere visualizzato l'effetto della property transform
    che tipicamente applica delle animazioni (es. rotate,scale). La property transform è specificata
    in basso sull'hover della left_leg e fa una rotazione di 20 gradi dell'elemento */
    transition: all 1s;
}

.left_leg:hover {
    /*quando una proprietà css non è supportata da tutti i browser
     perchè è ancora in fase sperimentale, oltre a dichiarare normalmente la property col
     relativo valore, occorre dichiararla con appositi prefissi, uno per ogni browser
     in cui la si vuole utilizzare (es. moz sta per mozilla)*/
    -webkit-transform: rotate(20deg);
    -moz-transform: rotate(20deg);
    -o-transform: rotate(20deg);
    -ms-transform: rotate(20deg);
    transform: rotate(20deg);
}

.right_leg {
    margin-left: 30px;
}

.left_eye, .right_eye {
    width: 20px;
    height: 20px;
    border-radius: 15px;
    background-color: white;
}

.left_eye {
    /* position:relative posiziona l'elemento relativamente alla sua posizione iniziale.
     se l'elemento è contenuto in un contenitore allora lo posiziona relativamente al contenitore
     position:absolute posizione l'elemento rispetto alla pagina html stessa.
     Se si usa position:absolute per un elemento contenuto in un altro elemento avente
     position:relative, allora l'elemento figlio verrà posizionato relativamente
     all'elemento padre.
     */
    position: relative;
    top: 100px;
    left: 40px;
}

.right_eye {
    position: relative;
    top: 100px;
    left: 120px;
}





